AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: v1.3 Deployment of Backend API NVA, no importvalues

Parameters:

  AlmaSruHost:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Key to get address to Alma-SRU
    Default: AlmaSruHost
  ApiDomainCertificateArn:
    Description: Key to get ARN  of certificate to assign to custom-domain
    Type: AWS::SSM::Parameter::Value<String>
    Default: ApiDomainCertificateArn
  ApiDomainName:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Key to get the custom-domain
    Default: ApiDomainName
  BareApiKey:
    Type: String
    Description: Key to access bare
    NoEcho: true
    Default: '{{resolve:secretsmanager:BareApiKey:SecretString}}'
  BareHost:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Key to get address to bare
    Default: BareHost
  CognitoAuthorizerArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: CognitoAuthorizerArn
  NVAResourceStorageBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of S3 Bucket containing NVA resource files
    Default: '/NVA/PublicationData'

Resources:

  # ===============================
  #  CustomDomain to collect all Backend APIs
  # ===============================

  ApiCustomDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Ref ApiDomainName
      CertificateArn: !Ref ApiDomainCertificateArn

  # ===============================
  #  Allow logging from API Gateway
  # ===============================

  ApiGwAccountConfig:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt "ApiGatewayLoggingRole.Arn"
  ApiGatewayLoggingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"



  # ===============================
  #  API / Backend
  # ===============================

  SruLastPublication:  # nva-alma-proxy
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/SruLastPublication
        SemanticVersion: 0.1.3
      Parameters:
        CognitoAuthorizerArn: !Ref CognitoAuthorizerArn
        CustomDomain: !Ref ApiCustomDomain
        CustomDomainBasePath: alma
        AlmaSruHost: !Ref AlmaSruHost

  UploadMultipart: # nva-upload-multipart
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/UploadMultipart
        SemanticVersion: 0.1.9
      Parameters:
        CognitoAuthorizerArn: !Ref CognitoAuthorizerArn
        CustomDomain: !Ref ApiCustomDomain
        CustomDomainBasePath: upload
        S3UploadBucket: !Ref NVAResourceStorageBucket #  nva-storage-test # S3 Bucket to upload files to  - refer to template?

  PersonData: # nva-bare-proxy
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/PersonData
        SemanticVersion: 0.1.5
      Parameters:
        CognitoAuthorizerArn: !Ref CognitoAuthorizerArn
        CustomDomain: !Ref ApiCustomDomain
        CustomDomainBasePath: person
        BareApiKey: !Ref BareApiKey
        BareHost: !Ref BareHost

  PublicationChannelRegister: # nva-channel-registry
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/PublicationChannelRegister
        SemanticVersion: 0.1.3
      Parameters:
        CustomDomain: !Ref ApiCustomDomain
        CustomDomainBasePath: channel

  nvafetchdoi: # nva-fetch-doi
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/nva-fetch-doi
        SemanticVersion: 0.1.21
      Parameters:
        CustomDomainBasePath: doi-fetch

  Projects: # nva-cristin-projects
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/Projects
        SemanticVersion: 0.2.2
      Parameters:
        CustomDomain: !Ref ApiCustomDomain
        CustomDomainBasePath: project

  NvaInstitutionProxy:  # nva-institution-proxy
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/NvaInstitutionProxy
        SemanticVersion: 0.1.3
      Parameters:
        CustomDomain: !Ref ApiCustomDomain
        CustomDomainBasePath: institution

  NvaDownloadPublicationFileApi: # nva-download-file
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/NvaDownloadPublicationFileApi
        SemanticVersion: 0.1.11
      Parameters:
        CognitoAuthorizerArn: !Ref CognitoAuthorizerArn
        CustomDomain: !Ref ApiCustomDomain
        CustomDomainBasePath: download
        S3Bucket: !Ref NVAResourceStorageBucket

  NvaDoiRegistrarClient:  # nva-doi-registrar-client
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/NvaDoiRegistrarClient
        SemanticVersion: 0.1.6

  NvaSearchAPI: # nva-search-api
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/NvaSearchAPI
        SemanticVersion: 0.0.11
      Parameters:
        CustomDomainBasePath: search

Outputs:
  BackendDomainURL:
    Description: URL to the backend API
    Value: !Sub 'https://${ApiCustomDomain}/'
    Export:
      Name: BackendDomainURL
